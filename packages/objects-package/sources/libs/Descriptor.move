module objectsDAO::descriptor {
  use std::string;
  use std::string::String;
  use std::vector;
  use sui::object;
  use sui::object::UID;
  use sui::table;
  use sui::table::Table;
  use sui::transfer;
  use sui::tx_context::TxContext;

  #[test_only]
  use sui::test_scenario;
  #[test_only]
  use sui::test_scenario::Scenario;

  struct ObjectsDescriptor has key, store {
    id: UID,
    // Noun Color Palettes (Index => Hex Colors)
    palettes: Table<u8, vector<String>>,
    // Noun Backgrounds (Hex Colors)
    backgrounds: vector<String>,
    // Noun Bodies (Custom RLE)
    bodies: vector<String>,
    // Noun Accessories (Custom RLE)
    accessories: vector<String>,
    // Noun Heads (Custom RLE)
    heads: vector<String>,
    // Noun Glasses (Custom RLE)
    glasses: vector<String>
  }

  fun init(ctx: &mut TxContext) {
    let objects_descriptor = ObjectsDescriptor {
      id: object::new(ctx),
      // Noun Color Palettes (Index => Hex Colors)
      palettes: table::new<u8, vector<String>>(ctx),
      // Noun Backgrounds (Hex Colors)
      backgrounds: vector::empty<String>(),
      // Noun Bodies (Custom RLE)
      bodies: vector::empty<String>(),
      // Noun Accessories (Custom RLE)
      accessories: vector::empty<String>(),
      // Noun Heads (Custom RLE)
      heads: vector::empty<String>(),
      // Noun Glasses (Custom RLE)
      glasses: vector::empty<String>(),
    };
    // Transfer the forge object to the module/package publisher
    transfer::public_share_object(objects_descriptor);
  }

  /**
  * @notice Get the number of available Noun `backgrounds`.
  */
  public fun backgroundCount(objects_descriptor: &mut ObjectsDescriptor): u64 {
    vector::length(&objects_descriptor.backgrounds)
  }

  /**
   * @notice Get the number of available Noun `bodies`.
   */
  public fun bodyCount(objects_descriptor: &mut ObjectsDescriptor): u64 {
    vector::length(&objects_descriptor.bodies)
  }

  /**
   * @notice Get the number of available Noun `accessories`.
   */
  public fun accessoryCount(objects_descriptor: &mut ObjectsDescriptor): u64 {
    vector::length(&objects_descriptor.accessories)
  }

  /**
   * @notice Get the number of available Noun `heads`.
   */
  public fun headCount(objects_descriptor: &mut ObjectsDescriptor): u64 {
    vector::length(&objects_descriptor.heads)
  }

  /**
   * @notice Get the number of available Noun `glasses`.
   */
  public fun glassesCount(objects_descriptor: &ObjectsDescriptor): u64 {
    vector::length(&objects_descriptor.glasses)
  }

  public fun get_palettes(objects_descriptor: &ObjectsDescriptor): &Table<u8, vector<String>> {
    &objects_descriptor.palettes
  }

  public fun get_mut_palettes(objects_descriptor: &mut ObjectsDescriptor): &mut Table<u8, vector<String>> {
    &mut objects_descriptor.palettes
  }

  public fun get_backgrounds(objects_descriptor: &ObjectsDescriptor): &vector<String> {
    &objects_descriptor.backgrounds
  }

  public fun get_bodies(objects_descriptor: &ObjectsDescriptor): &vector<String> {
    &objects_descriptor.bodies
  }

  public fun get_accessories(objects_descriptor: &ObjectsDescriptor): &vector<String> {
    &objects_descriptor.accessories
  }

  public fun get_heads(objects_descriptor: &ObjectsDescriptor): &vector<String> {
    &objects_descriptor.heads
  }

  public fun get_glasses(objects_descriptor: &ObjectsDescriptor): &vector<String> {
    &objects_descriptor.glasses
  }

  public entry fun addColorsToPalette(objects_descriptor: &mut ObjectsDescriptor) {
    let paletteIndex = 0;
    let newColors: vector<String> = vector[
      string::utf8(b""),
      string::utf8(b"c5b9a1"),
      string::utf8(b"ffffff"),
      string::utf8(b"cfc2ab"),
      string::utf8(b"63a0f9"),
      string::utf8(b"807f7e"),
      string::utf8(b"caeff9"),
      string::utf8(b"5648ed"),
      string::utf8(b"5a423f"),
      string::utf8(b"b9185c"),
      string::utf8(b"cbc1bc"),
      string::utf8(b"b87b11"),
      string::utf8(b"fffdf2"),
      string::utf8(b"4b4949"),
      string::utf8(b"343235"),
      string::utf8(b"1f1d29"),
      string::utf8(b"068940"),
      string::utf8(b"867c1d"),
      string::utf8(b"ae3208"),
      string::utf8(b"9f21a0"),
      string::utf8(b"f98f30"),
      string::utf8(b"fe500c"),
      string::utf8(b"d26451"),
      string::utf8(b"fd8b5b"),
      string::utf8(b"5a65fa"),
      string::utf8(b"d22209"),
      string::utf8(b"e9265c"),
      string::utf8(b"c54e38"),
      string::utf8(b"80a72d"),
      string::utf8(b"4bea69"),
      string::utf8(b"34ac80"),
      string::utf8(b"eed811"),
      string::utf8(b"62616d"),
      string::utf8(b"ff638d"),
      string::utf8(b"8bc0c5"),
      string::utf8(b"c4da53"),
      string::utf8(b"000000"),
      string::utf8(b"f3322c"),
      string::utf8(b"ffae1a"),
      string::utf8(b"ffc110"),
      string::utf8(b"505a5c"),
      string::utf8(b"ffef16"),
      string::utf8(b"fff671"),
      string::utf8(b"fff449"),
      string::utf8(b"db8323"),
      string::utf8(b"df2c39"),
      string::utf8(b"f938d8"),
      string::utf8(b"5c25fb"),
      string::utf8(b"2a86fd"),
      string::utf8(b"45faff"),
      string::utf8(b"38dd56"),
      string::utf8(b"ff3a0e"),
      string::utf8(b"d32a09"),
      string::utf8(b"903707"),
      string::utf8(b"6e3206"),
      string::utf8(b"552e05"),
      string::utf8(b"e8705b"),
      string::utf8(b"f38b7c"),
      string::utf8(b"e4a499"),
      string::utf8(b"667af9"),
      string::utf8(b"648df9"),
      string::utf8(b"7cc4f2"),
      string::utf8(b"97f2fb"),
      string::utf8(b"a3efd0"),
      string::utf8(b"87e4d9"),
      string::utf8(b"71bde4"),
      string::utf8(b"ff1a0b"),
      string::utf8(b"f78a18"),
      string::utf8(b"2b83f6"),
      string::utf8(b"d62149"),
      string::utf8(b"834398"),
      string::utf8(b"ffc925"),
      string::utf8(b"d9391f"),
      string::utf8(b"bd2d24"),
      string::utf8(b"ff7216"),
      string::utf8(b"254efb"),
      string::utf8(b"e5e5de"),
      string::utf8(b"00a556"),
      string::utf8(b"c5030e"),
      string::utf8(b"abf131"),
      string::utf8(b"fb4694"),
      string::utf8(b"e7a32c"),
      string::utf8(b"fff0ee"),
      string::utf8(b"009c59"),
      string::utf8(b"0385eb"),
      string::utf8(b"00499c"),
      string::utf8(b"e11833"),
      string::utf8(b"26b1f3"),
      string::utf8(b"fff0be"),
      string::utf8(b"d8dadf"),
      string::utf8(b"d7d3cd"),
      string::utf8(b"1929f4"),
      string::utf8(b"eab118"),
      string::utf8(b"0b5027"),
      string::utf8(b"f9f5cb"),
      string::utf8(b"cfc9b8"),
      string::utf8(b"feb9d5"),
      string::utf8(b"f8d689"),
      string::utf8(b"5d6061"),
      string::utf8(b"76858b"),
      string::utf8(b"757576"),
      string::utf8(b"ff0e0e"),
      string::utf8(b"0adc4d"),
      string::utf8(b"fdf8ff"),
      string::utf8(b"70e890"),
      string::utf8(b"f7913d"),
      string::utf8(b"ff1ad2"),
      string::utf8(b"ff82ad"),
      string::utf8(b"535a15"),
      string::utf8(b"fa6fe2"),
      string::utf8(b"ffe939"),
      string::utf8(b"ab36be"),
      string::utf8(b"adc8cc"),
      string::utf8(b"604666"),
      string::utf8(b"f20422"),
      string::utf8(b"abaaa8"),
      string::utf8(b"4b65f7"),
      string::utf8(b"a19c9a"),
      string::utf8(b"58565c"),
      string::utf8(b"da42cb"),
      string::utf8(b"027c92"),
      string::utf8(b"cec189"),
      string::utf8(b"909b0e"),
      string::utf8(b"74580d"),
      string::utf8(b"027ee6"),
      string::utf8(b"b2958d"),
      string::utf8(b"efad81"),
      string::utf8(b"7d635e"),
      string::utf8(b"eff2fa"),
      string::utf8(b"6f597a"),
      string::utf8(b"d4b7b2"),
      string::utf8(b"d18687"),
      string::utf8(b"cd916d"),
      string::utf8(b"6b3f39"),
      string::utf8(b"4d271b"),
      string::utf8(b"85634f"),
      string::utf8(b"f9f4e6"),
      string::utf8(b"f8ddb0"),
      string::utf8(b"b92b3c"),
      string::utf8(b"d08b11"),
      string::utf8(b"257ced"),
      string::utf8(b"a3baed"),
      string::utf8(b"5fd4fb"),
      string::utf8(b"c16710"),
      string::utf8(b"a28ef4"),
      string::utf8(b"3a085b"),
      string::utf8(b"67b1e3"),
      string::utf8(b"1e3445"),
      string::utf8(b"ffd067"),
      string::utf8(b"962236"),
      string::utf8(b"769ca9"),
      string::utf8(b"5a6b7b"),
      string::utf8(b"7e5243"),
      string::utf8(b"a86f60"),
      string::utf8(b"8f785e"),
      string::utf8(b"cc0595"),
      string::utf8(b"42ffb0"),
      string::utf8(b"d56333"),
      string::utf8(b"b8ced2"),
      string::utf8(b"f39713"),
      string::utf8(b"e8e8e2"),
      string::utf8(b"ec5b43"),
      string::utf8(b"235476"),
      string::utf8(b"b2a8a5"),
      string::utf8(b"d6c3be"),
      string::utf8(b"49b38b"),
      string::utf8(b"fccf25"),
      string::utf8(b"f59b34"),
      string::utf8(b"375dfc"),
      string::utf8(b"99e6de"),
      string::utf8(b"27a463"),
      string::utf8(b"554543"),
      string::utf8(b"b19e00"),
      string::utf8(b"d4a015"),
      string::utf8(b"9f4b27"),
      string::utf8(b"f9e8dd"),
      string::utf8(b"6b7212"),
      string::utf8(b"9d8e6e"),
      string::utf8(b"4243f8"),
      string::utf8(b"fa5e20"),
      string::utf8(b"f82905"),
      string::utf8(b"555353"),
      string::utf8(b"876f69"),
      string::utf8(b"410d66"),
      string::utf8(b"552d1d"),
      string::utf8(b"f71248"),
      string::utf8(b"fee3f3"),
      string::utf8(b"c16923"),
      string::utf8(b"2b2834"),
      string::utf8(b"0079fc"),
      string::utf8(b"d31e14"),
      string::utf8(b"f83001"),
      string::utf8(b"8dd122"),
      string::utf8(b"fffdf4"),
      string::utf8(b"ffa21e"),
      string::utf8(b"e4afa3"),
      string::utf8(b"fbc311"),
      string::utf8(b"aa940c"),
      string::utf8(b"eedc00"),
      string::utf8(b"fff006"),
      string::utf8(b"9cb4b8"),
      string::utf8(b"a38654"),
      string::utf8(b"ae6c0a"),
      string::utf8(b"2bb26b"),
      string::utf8(b"e2c8c0"),
      string::utf8(b"f89865"),
      string::utf8(b"f86100"),
      string::utf8(b"dcd8d3"),
      string::utf8(b"049d43"),
      string::utf8(b"d0aea9"),
      string::utf8(b"f39d44"),
      string::utf8(b"eeb78c"),
      string::utf8(b"f9f5e9"),
      string::utf8(b"5d3500"),
      string::utf8(b"c3a199"),
      string::utf8(b"aaa6a4"),
      string::utf8(b"caa26a"),
      string::utf8(b"fde7f5"),
      string::utf8(b"fdf008"),
      string::utf8(b"fdcef2"),
      string::utf8(b"f681e6"),
      string::utf8(b"018146"),
      string::utf8(b"d19a54"),
      string::utf8(b"9eb5e1"),
      string::utf8(b"f5fcff"),
      string::utf8(b"3f9323"),
      string::utf8(b"00fcff"),
      string::utf8(b"4a5358"),
      string::utf8(b"fbc800"),
      string::utf8(b"d596a6"),
      string::utf8(b"ffb913"),
      string::utf8(b"e9ba12"),
      string::utf8(b"767c0e"),
      string::utf8(b"f9f6d1"),
      string::utf8(b"d29607"),
      string::utf8(b"f8ce47"),
      string::utf8(b"395ed1"),
      string::utf8(b"ffc5f0"),
      string::utf8(b"d4cfc0"),
    ];
    let palettes_length = table::length<u8, vector<String>>(&objects_descriptor.palettes);
    let newColors_length = vector::length(&newColors);
    let length = palettes_length + newColors_length;
    assert!(length <= 256u64, 1);
    let i = 0;
    while (i < newColors_length) {
      let new_color = *vector::borrow(&newColors, i);
      // debug::print(&paletteIndex);
      addColorToPalette(paletteIndex, new_color, objects_descriptor);
      i = i + 1
    }
  }

  public entry fun addManyBackgrounds(objects_descriptor: &mut ObjectsDescriptor) {
    let backgrounds: vector<String> = vector[
      string::utf8(b"d5d7e1"),
      string::utf8(b"e1d7d5"),
    ];
    let backgrounds_length = vector::length(&backgrounds);
    let i = 0;
    while (i < backgrounds_length) {
      let background = *vector::borrow(&backgrounds, i);
      addBackground(background, objects_descriptor);
      i = i + 1
    }
  }
  /**
   * @notice Batch add Noun accessories.
   * @dev This function can only be called by the owner when not locked.
   */
  public entry fun addManyAccessories(objects_descriptor: &mut ObjectsDescriptor) {
    let accessories: vector<String> = vector[
      string::utf8(b"0x0017141e0d0100012005000220060001200300012002000120020001200500012005000120020002200100012002000120010001200400012001000120"),
      string::utf8(b"0x0018151a0d02000321010001210200052102000121010001210100012101000221"),
      string::utf8(b"0x0017141d0e010205220102042201000102032202000102012201000122020001020200012205000122050001220200"),
      string::utf8(b"0x0017121e0d0100012301000123060002230100022305000223010002230500022301000123020001230300"),
      string::utf8(b"0x0018151a0d0100022402000224010001240200022402000124030002240300"),
      string::utf8(b"0x0017131c0d040001250400022501000425012401260100042503000325020001250400"),
      string::utf8(b"0x0015141d0d0127050001270100012703000127030001270100012705000127060001270500032705000127040001270100012701000127030003270200"),
      string::utf8(b"0x0015161e0b012809000128010001280700012803000128050001280500012803000128070003280900010e0700020e05280500020e03280700030e0700020e03280300"),
      string::utf8(b"0x0018141e0d04000327050002270400012701000127030001270400022704000327050001270500"),
      string::utf8(b"0x0015141e0c0127060001270100012704000127030001270200012705000227050001270200012703000627030001270129012701290127040004270500012701290127060002270100"),
      string::utf8(b"0x0015141b0c01270600012701000127040001270300012702000127050002270400062a02000427022a02000427022a0100"),
      string::utf8(b"0x0015141d0c0127060001270100012704000127030001270200012705000227050001270200012703000127012904270200062703000427050002270300"),
      string::utf8(b"0x0015141e0c012706000127010001270400012703000127020001270500022704000627020001270100022701000127020006270300042703000127010002270100012702000127040001270100"),
      string::utf8(b"0x0017141d0d0300032b0300012b0300012b0100032b0200022b0100012b0100012b0100022b0200032b0100012b0300012b0300032b0300"),
      string::utf8(b"0x0016131c0e012c0300022c0300012c0100012c0100012c0200012c0100012c0300012c0200022c0100042c0100022c"),
      string::utf8(b"0x0016141d0c01000127060003270100012702000127010001270200012706000327030007270300032706000127070001270300"),
      string::utf8(b"0x0015171f09022d0224022d0224022d0224042d0224022d0224022d0224022d0224022e0224022e0224022e0424022e0224022e0224022e0224022f01000124022f0224022f0224042f01000124022f0224022f0224022f02240100013002240230022402300424010001300224023002240230022402310100012402310224023102240431010001240231022402310224023102240100013202240232022402320224"),
      string::utf8(b"0x0015171f091c331c34021201000d1201000b12023501000d3501000b35023601000d3601000b36023701000b37"),
      string::utf8(b"0x0015171f091c331c25023801000d3801000d3801000d3801000b38023901000d3901000b39023a01000b3a"),
      string::utf8(b"0x0015171f090f3b013c013b013c013b013c013b013c013b013c013b013c013b103c0104013c0104013c0104013c0104013c0104013c0104013c030401000d0401000d0401000c04013d0100013d0104013d0104013d0104013d0104013d0104033d01000c3d013e0100013e013d013e013d013e013d013e013d013e013d033e01000b3e"),
      string::utf8(b"0x0015171f091c3f1e4001000d4001000b40023d01000d3d01000d3d01000d3d01000b3d024101000b41"),
      string::utf8(b"0x0015171f091c421c43022b01000d2b01000b2b021001000d1001000b10024401000d4401000b44021301000b13"),
      string::utf8(b"0x0015171f092a45100901000d0901000d0901000d0901000d0901000b09024601000d4601000b46"),
      string::utf8(b"0x0015171f092a470e26024301000b43021501000b15024801000d4801000b48024901000d4901000d4901000b49"),
      string::utf8(b"0x0018131d0e0200011e0100011e0300011e0300024a0200024a0300014a0300014a0400"),
      string::utf8(b"0x0018171c09012701000327010003270100032702000127030001270300012703000327020003270100032701000227010001270300012703000127030002270200022701000327010003270100"),
      string::utf8(b"0x0015171f090225021d024b0225021d024b0425021d024b0225021d024b0225024b0225021d024b0225021d044b0225021d024b0225021d024b021d0100014b0225021d024b0225041d0100014b0225021d024b0225021d02250100011d024b0225021d024b04250100011d024b0225021d024b0225024b01000125021d024b0225021d044b01000125021d024b0225021d024b021d0100014b0225021d024b0225021d"),
      string::utf8(b"0x0015171f090400030701000307010005070100030701000307030003070100030707000307070003070700030701000307040002070100030701000307010001070200020701000307050001070200020707000307070003070100020704000307010003070100040702000307010003070300"),
      string::utf8(b"0x0015171f090400034c0100034c0100054c0100034c0100034c0300034c0100034c0700034c0700034c0700034c0100034c0400024c0100034c0100034c0100014c0200024c0100034c0500014c0200024c0700034c0700034c0100024c0400034c0100034c0100044c0200034c0100034c0300"),
      string::utf8(b"0x0015171f090400034d010003470100021503130100034d01000347030003130100034d040006130400034e01000313030003150100034e010003130247010003150100034e040002470100031504000347010002470400034d01000347040002130100034d010003470100014e020002130100034d04000113014e020002130400034e01000113"),
      string::utf8(b"0x0015171f09030002240400022406000224040002241100022404000224040004240400022404000224110002240400022406000224040002241100022404000224040004240400022404000224"),
      string::utf8(b"0x0015171f09030002020400020206000202040002021100020204000202040004020400020204000202110002020400020206000202040002021100020204000202040004020400020204000202"),
      string::utf8(b"0x0015171f09024f02440250024f02440250044f02440250024f02440250024f0250024f02440250024f02440450024f02440250024f02440250024401000150024f02440250024f044401000150024f02440250024f0244024f010001440250024f02440250044f010001440250024f02440250024f02500100014f02440250024f024404500100014f02440250024f02440250024401000150024f02440250024f0244"),
      string::utf8(b"0x0015171f09031003000310030005100300031003000510030003100300021003000310030003100500031003000310050003100300031002000210040003100300041004000310030004100400031003000210030003100300031005000310030003100200"),
      string::utf8(b"0x0015171f09031a0300031a0300051a0300031a0300051a0300031a0300021a0300031a0300031a0500031a0300031a0500031a0300031a0200021a0400031a0300041a0400031a0300041a0400031a0300021a0300031a0300031a0500031a0300031a0200"),
      string::utf8(b"0x0015171f09020002240200022402000224040002240200022402000224020002240200022402000224020004240200022402000224020002240300012402000224020002240500012402000224020002240200022402000224020002240200042402000224020002240200022403000124020002240200022405000124020002240200022402000224020002240200022402000224"),
      string::utf8(b"0x0015171f09024b0200024b0200024b0200044b0200024b0200024b0200024b0200024b0200024b0200024b0400024b0200024b0200024b0200024b0200024b0200024b0200044b0200024b0200024b0200024b0300014b0200024b0200024b0500014b0200024b0200024b0200024b0200024b0200024b0200044b0200024b0200024b0200024b0300014b0200024b0200024b0200"),
      string::utf8(b"0x0015171f09020002210200022102000221040002210200022102000221020002210200022102000221020004210200022102000221020002210300012102000221020002210500012102000221020002210200022102000221020002210200042102000221020002210200022103000121020002210200022105000121020002210200022102000221020002210200022102000221"),
      string::utf8(b"0x0018131d0d0300024801000202020001020151010004020300020204000102050001510300"),
      string::utf8(b"0x0018131a0d0200030202000b02"),
      string::utf8(b"0x0017151e0d0200021e0600031e0400011e0100011e0100021e0100031e0100031e0100021e0100011e0100011e0400031e0500021e0100011e0800021e"),
      string::utf8(b"0x00151717090e1a0e270e43"),
      string::utf8(b"0x0018141c0d05000152020003520124015201390152010001520124025201000152010001520239015203000152020001520100"),
      string::utf8(b"0x0015171f090e28020006280300032802000b2802000928010002280100022801000128010003280200062801000828030001280200012802000328080008280600012804000228010002280200012801000b2803000b28"),
      string::utf8(b"0x0015171f090e28024206280342032802430b2802430928014302280143022801000128012b0328022b062801000828032b012801100100012802100328071001000828031002440100012804440228014402280244012801000b28021301000b28"),
      string::utf8(b"0x0017131d0d0200035303000153010001530300045302000353010001530100035301000653030001530200"),
      string::utf8(b"0x0015141e0c012706000227060001270100012704000127030004270500022705000427040002270800022704000427050002270300"),
      string::utf8(b"0x0017141e0d021001000310020003100100041003000110040003100200021004000110030002100200031002000110020001100400"),
      string::utf8(b"0x0018131a0e012901000229020003290115010003290100"),
      string::utf8(b"0x0018131d0e020001540400015403000154015501540100055501000354030001540200"),
      string::utf8(b"0x0018151c0d020004550300015501000255010001550100015502000255020001550100015504000155030004550200"),
      string::utf8(b"0x0017151d0d010001020800020207000302020008020200030207000202080001020100"),
      string::utf8(b"0x0017131d0e0127010b0127010b0227010b0127010b01270656032702560227035601270856"),
      string::utf8(b"0x0018161a0d072402000324010008240100032401000124"),
      string::utf8(b"0x0018161a0d0757020001570100015701000157010006570100035701000157"),
      string::utf8(b"0x0017141d0d0857010002570100025702000257010002570700081e0100021e0100021e0200021e0100021e"),
      string::utf8(b"0x0016171e090158010001580100015801000158010001580100015801000158100001580100015801000158010001580100015801000158010001580e0001580300015801000158010001580100015801000158100001580100015801000158010001580100015801000158010001580e00015803000158010001580100015801000158010001580100"),
      string::utf8(b"0x0018141d0d010002590100025901000e590100055903000359050001590300"),
      string::utf8(b"0x0016121b0f01020100020201000202010002020100015a01020200015a0200"),
      string::utf8(b"0x0017151a1002000102020005270a02"),
      string::utf8(b"0x0017141e0d0100020c0400010c0200010c0300010c0700030c0600030c0700010c0300010c0200010c0400020c0100"),
      string::utf8(b"0x0016131d0e0200015c0300015c012c015c0300015c0300035c0100015c032c035c022c025c032c015c0100035c0100"),
      string::utf8(b"0x0018141d0d0300045d0200055d0200055d0200055d0200045d0100025d0500"),
      string::utf8(b"0x0017121c0e0c5e0100025e0200025f0200025f0100"),
      string::utf8(b"0x0015171f09020001100200011002000110020001100200015d0200015d0200015d0200015d0200015d02000110020001100200011002000110020001100200015d0200015d0200015d0200015d02000110020001100200011002000110020001100200015d0200015d0200015d0200015d0200015d0500011002000110020001100200015d0200015d0200015d0200015d0200015d02000110020001100200011002000110020001100500015d0200015d0200015d02000110020001100200011002000110020001100100"),
      string::utf8(b"0x0015171f09020001600200016002000160020001600200016002000160020001600200016002000160020001600200016002000160020001600200016002000160020001600200016002000160020001600200016002000160020001600200016002000160020001600200016002000160020001600500016002000160020001600200016002000160020001600200016002000160020001600200016002000160020001600200016005000160020001600200016002000160020001600200016002000160020001600100"),
      string::utf8(b"0x0016161e0d03000324040007240200072401000324030206240102010001020624030203240100072402000724040003240300"),
      string::utf8(b"0x0018131d0e0400032401000224030002240200032403000724"),
      string::utf8(b"0x0018131c0e010c0100010c0100010c0500010c0100010c0100010c0500010c0100010c0100010c"),
      string::utf8(b"0x0017131d0e0661010001610100016101000161010001610100016101000161010001610100016101000161010003610100026101000361"),
      string::utf8(b"0x0000000000"),
      string::utf8(b"0x0015171f09206207591162026301000262035902620159056201000162015903620259046202630100036201590962010001620259016204590362026301000d620100016207590362026301000b62"),
      string::utf8(b"0x0015141d0c012706000127010001270400012703000127020001270500022706000227050004270400042703000627020006270100"),
      string::utf8(b"0x0017151910010001380400010203000564"),
      string::utf8(b"0x0018131d0e04000144010001440200014401000144060001440100014402000144010001440400"),
      string::utf8(b"0x0017171c090b000313070004190313030004150419031302470100041504190300024701000415070002470c00"),
      string::utf8(b"0x0018151e0d030002650500046504000465030002660265025b01000466045b0466045b010002660200025b0100"),
      string::utf8(b"0x0019171b090124020001240200012402000124020001240f00022401000b24"),
      string::utf8(b"0x0015171f0b0414030009140300091403000914030005140100036703000567010003670300056701000367030005670100036703000567010003140300051401000314030005140100031403000514"),
      string::utf8(b"0x0015151f0c031d0300061d0300061d0300031d0324030006240300062403000324031d0300061d0300061d0300031d03240300062403000324"),
      string::utf8(b"0x0018121b0e01680200016801000268020002680100016802000168"),
      string::utf8(b"0x0015151f0c0e24010005240100022402000324020001240169030001240300022407000224070002240700022407000124016907000224070002240400"),
      string::utf8(b"0x0018121c0e010002600100036001000260030001600221020001210100"),
      string::utf8(b"0x0017121d0d0200014f0100024f0100024f0200034f0200024f0100024f0100014f0500014f0200014f0300"),
      string::utf8(b"0x001514170d0127050001270100012703000127030003270200"),
      string::utf8(b"0x0017141d0d010001020300010201000202010001020100020202000302030005020300030202000202010001020100020201000102030001020100"),
      string::utf8(b"0x0016151d0d0500021a0300011a0100041a0400041a0500021a0100011a0100021a0600021a0d00011a0600"),
      string::utf8(b"0x0017151e0d0100011010000210040001100100021009000210050004100200011001000410050002100100"),
      string::utf8(b"0x0015171f090e6a0e440e290e1d020201000124020202240202022404020100012402020224020202240202022401000102022402020224020204240100010202240202022402020224026a01000b6a024401000b44022901000b29"),
      string::utf8(b"0x0015171d092a252a00022501000d2501000d2501000b25"),
      string::utf8(b"0x0015171b092a5b0e00026b01000b6b0e00022b01000b2b"),
      string::utf8(b"0x0015171f090e440e000e440e00024401000b440e00024401000b440e00024401000b440e00024401000b44"),
      string::utf8(b"0x0015171f090e360e000e360e00023601000b360e00023601000b360e00023601000b360e00023601000b36"),
      string::utf8(b"0x0015171f090e6c0e000e6c0e00026c01000b6c0e00026c01000b6c0e00026c01000b6c0e00026c01000b6c"),
      string::utf8(b"0x0015171f090e1a0e000e1a0e00021a01000b1a0e00021a01000b1a0e00021a01000b1a0e00021a01000b1a"),
      string::utf8(b"0x0017141a0d03000127040001270300012703000327020001270100032701000127"),
      string::utf8(b"0x0017171a090267020e0267020e0267020e0467020e0267020e0267020e0267020e01000167020e0267020e0267040e01000167020e0267020e0267020e"),
      string::utf8(b"0x0015171f09022902000129040001290300032903000429040004290900052909000429020001290100012903000129010004290300012901000229010001290100042903000129010002290300042908000129010004290a0004290a0004290a000229"),
      string::utf8(b"0x0017131d0d014f0100014f010002580100014f020002580100014f02000258060001580200024f010001580200024f010002580100024f0100"),
      string::utf8(b"0x0018131c0e0302020003020900010206000102"),
      string::utf8(b"0x0015121f0e0424014c0224024c0224024c0224024c0224024c0224024c0224024c0224024c0224024c0224024c0224014c"),
      string::utf8(b"0x0016151f0b0200023c0100016d0200016d0100013c0100033c0200016d0300013c0300013c0200026d0300026e0100013c0100026d0200016e0100011d016e013c0100016d0200016e0100011d016d013c0100016d0100011d0100016e0100011d0100026d0400016e0200011d0300011d0300016e0200031d0100011d0100016e0200016e0100021d0200"),
      string::utf8(b"0x0015121f0e046f014c026f024c026f024c026f024c026f024c026f024c026f024c026f024c026f024c026f024c026f014c"),
      string::utf8(b"0x0016111e0f044202000c42"),
      string::utf8(b"0x0017151d0d020001700500027006000270010001700600037006000170010001700100017005000270060002700100"),
      string::utf8(b"0x0017151d0c01000771010001710700027101000271010002710100027101000171020001710200027101000271010002710100027107000171010007710100"),
      string::utf8(b"0x0017141c0d037201000472030001720200017203000172020001720300017202000172030001720200037201000372"),
      string::utf8(b"0x0017131d0d027301000273010001730200027301000273010002730700027301000173010003730100027301000173020001730200"),
      string::utf8(b"0x0018151b0c022402000124020001240100012401000224010002240100022401000524010003240100012401000124010001240100"),
      string::utf8(b"0x0016161d0b0200012408000324080001240100032407000224010003240700022401000324070002240100032408000124010001240a000124"),
      string::utf8(b"0x0017131d0d010001740200017401000274010001740100037402000174070002740100017402000274010002740100017402000374"),
      string::utf8(b"0x0019151b0d05240100042401000224010003240200022401000224"),
      string::utf8(b"0x0019171d09027501000d7501000d7501000d7501000d7501000b75"),
      string::utf8(b"0x0018131c0d0157030001570100015702000157020001570100015701000257010001570200035703000257"),
      string::utf8(b"0x0017131d0d013f0300033f0200023f0100023f0100013f0900013f0200033f0100013f0100033f0100013f0100023f"),
      string::utf8(b"0x001715190d01020200020201000102010001020200020201000102010002020100020201000202"),
      string::utf8(b"0x0016141c0d06000115070002150100011502000215010001150100011501000115070002150200041501000115020001150100"),
      string::utf8(b"0x0018151a0d037601000176010001760100017601000176010001760100017601000176010001760100017601000276"),
      string::utf8(b"0x0017131e0d0100026a0100016a0200016a0100026a0700026a0100016a0100036a0100036a0700026a0100016a0200016a0100026a0100"),
      string::utf8(b"0x0017131e0d0100023f0100013f0200013f0100023f0700023f0100013f0100033f0100033f0700023f0100013f0200013f0100023f0100"),
      string::utf8(b"0x0017131e0d01000218010001180200011801000218070002770100011501000115027701000315070002100100011002000110010002100100"),
      string::utf8(b"0x0016131d0d0100026d0100016d0200016d0100026d0700026d0100016d0100036d0100036d0700026d0100016d0200016d0100026d0100"),
      string::utf8(b"0x0018131b0d01000620010001200100012003000120010001200300012002000120"),
      string::utf8(b"0x0017131d0d0229040002290400012901000229040002290600022904000229040001290100"),
      string::utf8(b"0x0017131d0d02020200027802020200027801020100010201000278060003380100012701000238020001270100013803000227"),
      string::utf8(b"0x0018151d0c0700011d050001570100011d0100011d02000157010001570100031d015701000157010001570100011d0200015701000157010001570200011d02000157010001570500"),
      string::utf8(b"0x0018151a0c0144010001440100011d0100014401000144010001440100031d01000144020001440100011d0100011d010001440100"),
      string::utf8(b"0x0015171f090a0001630d0001630300026301000b63040001630d0001630900026301000463010006630a0001630d0001630300026301000b63040001630d0001630900"),
      string::utf8(b"0x0017151b0d01000357040002570200015705000157020001570400015703000257010001570600"),
      string::utf8(b"0x0018141e0d0179027a0179057a0179017b0179047a0179017b0179057a0179027a0179010001040100010401000104020001040a0001040100"),
      string::utf8(b"0x0015171f09037c010003150100037c0100027c0e00017c010003150100037c01000315020001150300017c030001150300017c01150200027c010003150100037c0f00027c020003150100037c01000215030001150300017c030001150200017c01150200037c010003150100027c0e00017c0200027c010003150100037c0100"),
      string::utf8(b"0x0015171f09037d0100037d0100037d0100027d0e00017d0100037d0100037d0100037d0200017d0300017d0300017d0300027d0200027d0100037d0100037d0f00027d0200037d0100037d0100027d0300017d0300017d0300017d0200027d0200037d0100037d0100027d0e00017d0200027d0100037d0100037d0100"),
      string::utf8(b"0x0018121b0e060e024c020e064c"),
      string::utf8(b"0x0015171f093a0101000d0101000d0101000d0101000d0101000d0101000d0101000b01"),
      string::utf8(b"0x0015171f093a0c01000d0c01000d0c01000d0c01000d0c01000d0c01000d0c01000b0c"),
      string::utf8(b"0x0015171f093a0f01000d0f01000d0f01000d0f01000d0f01000d0f01000d0f01000b0f"),
      string::utf8(b"0x0015171f093a0601000d0601000d0601000d0601000d0601000d0601000d0601000b06"),
    ];
    let accessories_length = vector::length(&accessories);
    let i = 0;
    while (i < accessories_length) {
      let access = *vector::borrow(&accessories, i);
      addAccessory(access, objects_descriptor);
      i = i + 1
    }
  }

  /**
   * @notice Batch add Noun bodies.
   * @dev This function can only be called by the owner when not locked.
   */
  public entry fun addManyBodies(objects_descriptor: &mut ObjectsDescriptor) {
    let bodies: vector<String> = vector[
      string::utf8(b"0x0015171f093a0101000d0101000d0101000d0101000d0101000d0101000d0101000b01"),
      string::utf8(b"0x0015171f093a0301000d0301000d0301000d0301000d0301000d0301000d0301000b03"),
      string::utf8(b"0x0015171f093a0401000d0401000d0401000d0401000d0401000d0401000d0401000b04"),
      string::utf8(b"0x0015171f093a0501000d0501000d0501000d0501000d0501000d0501000d0501000b05"),
      string::utf8(b"0x0015171f093a0601000d0601000d0601000d0601000d0601000d0601000d0601000b06"),
      string::utf8(b"0x0015171f093a0701000d0701000d0701000d0701000d0701000d0701000d0701000b07"),
      string::utf8(b"0x0015171f093a0801000d0801000d0801000d0801000d0801000d0801000d0801000b08"),
      string::utf8(b"0x0015171f093a0901000d0901000d0901000d0901000d0901000d0901000d0901000b09"),
      string::utf8(b"0x0015171f093a0a01000d0a01000d0a01000d0a01000d0a01000d0a01000d0a01000b0a"),
      string::utf8(b"0x0015171f093a0b01000d0b01000d0b01000d0b01000d0b01000d0b01000d0b01000b0b"),
      string::utf8(b"0x0015171f093a0c01000d0c01000d0c01000d0c01000d0c01000d0c01000d0c01000b0c"),
      string::utf8(b"0x0015171f093a0d01000d0d01000d0d01000d0d01000d0d01000d0d01000d0d01000b0d"),
      string::utf8(b"0x0015171f093a0e01000d0e01000d0e01000d0e01000d0e01000d0e01000d0e01000b0e"),
      string::utf8(b"0x0015171f093a0f01000d0f01000d0f01000d0f01000d0f01000d0f01000d0f01000b0f"),
      string::utf8(b"0x0015171f093a1001000d1001000d1001000d1001000d1001000d1001000d1001000b10"),
      string::utf8(b"0x0015171f093a1101000d1101000d1101000d1101000d1101000d1101000d1101000b11"),
      string::utf8(b"0x0015171f093a1201000d1201000d1201000d1201000d1201000d1201000d1201000b12"),
      string::utf8(b"0x0015171f093a1301000d1301000d1301000d1301000d1301000d1301000d1301000b13"),
      string::utf8(b"0x0015171f093a1401000d1401000d1401000d1401000d1401000d1401000d1401000b14"),
      string::utf8(b"0x0015171f093a1501000d1501000d1501000d1501000d1501000d1501000d1501000b15"),
      string::utf8(b"0x0015171f093a1601000d1601000d1601000d1601000d1601000d1601000d1601000b16"),
      string::utf8(b"0x0015171f093a1701000d1701000d1701000d1701000d1701000d1701000d1701000b17"),
      string::utf8(b"0x0015171f093a1801000d1801000d1801000d1801000d1801000d1801000d1801000b18"),
      string::utf8(b"0x0015171f093a1901000d1901000d1901000d1901000d1901000d1901000d1901000b19"),
      string::utf8(b"0x0015171f093a1a01000d1a01000d1a01000d1a01000d1a01000d1a01000d1a01000b1a"),
      string::utf8(b"0x0015171f093a1b01000d1b01000d1b01000d1b01000d1b01000d1b01000d1b01000b1b"),
      string::utf8(b"0x0015171f093a1c01000d1c01000d1c01000d1c01000d1c01000d1c01000d1c01000b1c"),
      string::utf8(b"0x0015171f093a1d01000d1d01000d1d01000d1d01000d1d01000d1d01000d1d01000b1d"),
      string::utf8(b"0x0015171f093a1e01000d1e01000d1e01000d1e01000d1e01000d1e01000d1e01000b1e"),
      string::utf8(b"0x0015171f093a1f01000d1f01000d1f01000d1f01000d1f01000d1f01000d1f01000b1f"),
    ];
    let bodies_length = vector::length(&bodies);
    let i = 0;
    while (i < bodies_length) {
      let body = *vector::borrow(&bodies, i);
      // debug::print(&string::utf8(b"body"));
      // debug::print(&body);
      addBody(body, objects_descriptor);
      i = i + 1
    }
  }

  /**
   * @notice Batch add Noun heads.
   * @dev This function can only be called by the owner when not locked.
   */
  public entry fun addManyHeads(heads: vector<String>, objects_descriptor: &mut ObjectsDescriptor) {
    let heads_length = vector::length(&heads);
    let i = 0;
    while (i < heads_length) {
      let head = *vector::borrow(&heads, i);
      addHead(head, objects_descriptor);
      i = i + 1
    }
  }

  /**
   * @notice Batch add Noun glasses.
   * @dev This function can only be called by the owner when not locked.
   */
  public entry fun addManyGlasses(objects_descriptor: &mut ObjectsDescriptor) {
    let glasses: vector<String> = vector[
      string::utf8(b"0x000b1710070300062101000621030001210202022401210100012102020224052102020224032102020224052102020224032102020224022102000121020202240121010001210202022401210300062101000621"),
      string::utf8(b"0x000b17100703000624010006240300012402020265012401000124020202650524020202650324020202650224020001240202026501240100012402020265022402000124020202650124010001240202026501240300062401000624"),
      string::utf8(b"0x000b1710070300062401000624030003240165022401000324016513240200012401660224015b01240100012401660224015b022402000624010006240300062401000624"),
      string::utf8(b"0x000b171007030006240100062403000124020203240100012402020724020205240202042402000124020203240100012402020424020001240202032401000124020203240300062401000624"),
      string::utf8(b"0x000b17100703000644010006440300014402020224014401000144020202240544020202240344020202240244020001440202022401440100014402020224024402000144020202240144010001440202022401440300064401000644"),
      string::utf8(b"0x000b17100703000607010006070300010702020224010701000107020202240507020202240307020202240207020001070202022401070100010702020224020702000107020202240107010001070202022401070300060701000607"),
      string::utf8(b"0x000b171007030006c0010006c0030001c00202022401c0010001c00202022405c00202022403c00202022402c0020001c00202022401c0010001c00202022402c0020001c00202022401c0010001c00202022401c0030006c0010006c0"),
      string::utf8(b"0x000b1710070300062401000624030004240102012401000424010208240102062401020224020006240100072402000624010006240300062401000624"),
      string::utf8(b"0x000b171007030006100100068c030001100202022401100100018c02020224048c0110020202240110028c02020224028c020001100202022401100100018c02020224028c020001100202022401100100018c02020224018c030006100100068c"),
      string::utf8(b"0x000b171007030006c8010006c8030001c80202022401c8010001c80202022405c80202022403c80202022402c8020001c80202022401c8010001c80202022402c8020001c80202022401c8010001c80202022401c8030006c8010006c8"),
      string::utf8(b"0x000b17100703000638010006380300013802020224013801000138020202240538020202240338020202240238020001380202022401380100013802020224023802000138020202240138010001380202022401380300063801000638"),
      string::utf8(b"0x000b171007030006de010006de030001de0202022401de010001de0202022405de0202022403de0202022402de020001de0202022401de010001de0202022402de020001de0202022401de010001de0202022401de030006de010006de"),
      string::utf8(b"0x000b17100703000609010006090300010902020224010901000109020202240509020202240309020202240209020001090202022401090100010902020224020902000109020202240109010001090202022401090300060901000609"),
      string::utf8(b"0x000b17100703000615010006150300011502020224011501000115020202240515020202240315020202240215020001150202022401150100011502020224021502000115020202240115010001150202022401150300061501000615"),
      string::utf8(b"0x000b171007030006210100069b030001210202022401210100019b02020224049b0121020202240121029b02020224029b020001210202022401210100019b02020224029b020001210202022401210100019b02020224019b030006210100069b"),
      string::utf8(b"0x000b17100703000625010006250300012502020224012501000125020202240525020202240325020202240225020001250202022401250100012502020224022502000125020202240125010001250202022401250300062501000625"),
      string::utf8(b"0x000b1710070300065a0100065a0300015a02670224015a0100015a02670224055a02670224035a02670224025a0200015a02670224015a0100015a02670224025a0200015a02670224015a0100015a02670224015a0300065a0100065a"),
      string::utf8(b"0x000b1710070300061d0100061d0300011d02020224011d0100011d02020224051d02020224031d02020224021d0200011d02020224011d0100011d02020224021d0200011d02020224011d0100011d02020224011d0300061d0100061d"),
      string::utf8(b"0x000b171007030006a1010006a1030001a10202022401a1010001a10202022405a10202022403a10202022402a1020001a10202022401a1010001a10202022402a1020001a10202022401a1010001a10202022401a1030006a1010006a1"),
      string::utf8(b"0x000b1710070300062701000614030001270202022401270100011402020224041401270202022401270214020202240214020001270202022401270100011402020224021402000127020202240127010001140202022401140300062701000614"),
      string::utf8(b"0x000b17100703000629010006290300012902020224012901000129020202240529020202240329020202240229020001290202022401290100012902020224022902000129020202240129010001290202022401290300062901000629"),
    ];
    let glasses_length = vector::length(&glasses);
    let i = 0;
    while (i < glasses_length) {
      let glass = *vector::borrow(&glasses, i);
      addGlasses(glass, objects_descriptor);
      i = i + 1
    }
  }

  /**
   * @notice Add a single color to a color palette.
   */
  public fun addColorToPalette(paletteIndex: u8, color: String, objects_descriptor: &mut ObjectsDescriptor) {
    let bool = table::contains(&objects_descriptor.palettes, paletteIndex);
    if (bool) {
      let colors = table::borrow_mut(&mut objects_descriptor.palettes, paletteIndex);
      vector::push_back(colors, color);
    }else {
      let colors = vector[color];
      table::add<u8, vector<String>>(&mut objects_descriptor.palettes, paletteIndex, colors)
    }
  }

  /**
   * @notice Add a Noun background.
   */
  public fun addBackground(background: String, objects_descriptor: &mut ObjectsDescriptor) {
    // let i = vector::length(&objects_descriptor.backgrounds);
    // vector::insert(&mut objects_descriptor.backgrounds, background, i);

    vector::push_back(&mut objects_descriptor.backgrounds, background);
  }

  /**
   * @notice Add a Noun body.
   */
  public fun addBody(body: String, objects_descriptor: &mut ObjectsDescriptor) {
    // let i = vector::length(&objects_descriptor.bodies);
    // vector::insert(&mut objects_descriptor.bodies, body, i);
    // let body = hex::decode(body);
    vector::push_back(&mut objects_descriptor.bodies, body);
  }

  /**
   * @notice Add a Noun accessory.
   */
  public fun addAccessory(accessory: String, objects_descriptor: &mut ObjectsDescriptor) {
    // let i = vector::length(&objects_descriptor.accessories);
    // vector::insert(&mut objects_descriptor.accessories, accessory, i);
    vector::push_back(&mut objects_descriptor.accessories, accessory);
  }

  /**
   * @notice Add a Noun head.
   */
  public fun addHead(head: String, objects_descriptor: &mut ObjectsDescriptor) {
    // let i = vector::length(&objects_descriptor.heads);
    // vector::insert(&mut objects_descriptor.heads, head, i);
    vector::push_back(&mut objects_descriptor.heads, head);
  }

  /**
   * @notice Add Noun glasses.
   */
  public fun addGlasses(glasses: String, objects_descriptor: &mut ObjectsDescriptor) {
    // let i = vector::length(&objects_descriptor.glasses);
    // vector::insert(&mut objects_descriptor.glasses, glasses, i);
    vector::push_back(&mut objects_descriptor.glasses, glasses);
  }

  #[test_only]
  public fun init_test(ctx: &mut TxContext) {
    init(ctx);
  }
}
